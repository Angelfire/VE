---
import BlogLayout from "@/layouts/BlogLayout.astro"

import Airplane from "@/components/icons/airplane.svg"
import Me from "@/components/Me.astro"

import { getFormattedDate } from "@/lib"
import BlogContent from "@/components/BlogContent.astro"

interface Heading {
  depth: number
  slug: string
  text: string
}

interface Props {
  description: string
  headings?: Heading[]
  title: string
  pubDate: Date
  slug?: string
}

const { description, pubDate, slug, title, headings } = Astro.props
const showHeadings = (headings?.length ?? 0) > 0
---

<script>
  const scrollBtn = document.getElementById("topHeader") as HTMLButtonElement
  const targetHeader = document.getElementById("header") as HTMLDivElement
  const observer = new IntersectionObserver(callback)

  observer.observe(targetHeader)

  function callback(entries: IntersectionObserverEntry[]) {
    entries.forEach(entry => {
      // only show the scroll to top button when the heading is out of view
      scrollBtn.dataset.show = (!entry.isIntersecting).toString()
    })
  }

  scrollBtn.addEventListener("click", () => {
    document.documentElement.scrollTo({ top: 0, behavior: "smooth" })
  })
</script>

<BlogLayout title={title} description={description} slug={slug}>
  <div class="relative mx-auto flex w-full max-w-screen-lg">
    {
      showHeadings && (
        <aside class="sticky top-24 hidden h-fit w-52 border-r border-slate-300 p-4 text-sm leading-6 md:block">
          <BlogContent headings={headings as Heading[]} />
        </aside>
      )
    }

    <article
      class="container mx-auto max-w-screen-lg px-4 md:px-0 md:pl-8"
      itemscope
      itemtype="http://schema.org/Article"
    >
      <header class="mb-8" id="header">
        <h1
          class="font-header border-b border-slate-300 pb-2 text-3xl font-extrabold text-slate-900 md:text-4xl"
          itemprop="headline"
        >
          {title}
        </h1>
        <div class="flex justify-between pt-2 text-slate-600">
          <time class="font-text pb-1 text-sm" datetime={pubDate.toDateString()}>
            {getFormattedDate({ date: pubDate })}
          </time>
        </div>
      </header>

      {
        showHeadings && (
          <div class="mb-8 block rounded-lg border border-slate-300 bg-slate-100 p-4 md:hidden">
            <BlogContent headings={headings as Heading[]} />
          </div>
        )
      }

      <div
        class="prose max-w-none prose-headings:scroll-mt-24 prose-h2:mt-1 prose-a:text-blue-600 prose-a:hover:underline prose-blockquote:mx-4 prose-blockquote:border-l-4 prose-blockquote:border-blue-500 prose-blockquote:bg-slate-100 prose-blockquote:pl-4 prose-code:rounded prose-code:px-2 prose-code:py-1 prose-code:font-mono prose-code:font-medium prose-code:text-blue-600 prose-pre:text-sm md:prose-blockquote:mx-9"
      >
        <slot />
      </div>
      <Me />
    </article>
    <button
      id="topHeader"
      class="fixed bottom-20 right-4 z-50 hidden h-10 w-10 translate-y-28 rounded-full border-2 border-transparent bg-slate-300 text-3xl opacity-0 transition-all duration-300 hover:border-slate-400 data-[show=true]:translate-y-0 data-[show=true]:opacity-100 sm:right-8 sm:h-12 sm:w-12 md:flex md:items-center md:justify-center"
      aria-label="Back to Top"
      data-show="false"
    >
      <Airplane />
    </button>
  </div>
</BlogLayout>
