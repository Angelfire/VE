---
import type { GetStaticPathsOptions, Page } from "astro"
import type { CollectionEntry } from "astro:content"

import { getCollection } from "astro:content"

interface Props {
  page: Page<CollectionEntry<"blog">>
}

import BlogLayout from "@/layouts/BlogLayout.astro"
import Aside from "@/components/Aside.astro"
import Pagination from "@/components/Pagination.astro"

import { getFormattedDate, getUniqueTags, sortMDByDate } from "@/lib"

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = await getCollection("blog")
  const tags = getUniqueTags(posts)
  const sortedPosts = sortMDByDate(posts)

  return tags.map(tag => {
    const filterPosts = sortedPosts.filter(post => post.data.tags?.includes(tag))

    return paginate(filterPosts, {
      params: { tag },
      pageSize: 50,
    })
  })
}

const { page } = Astro.props
const { tag } = Astro.params

const posts = await getCollection("blog")
const tags = getUniqueTags(posts)
---

<BlogLayout title={`Velocidad de Escape - Tag: ${tag}`} description={`Posts tagged with: ${tag}`}>
  <div class="container mx-auto mb-16 px-4 md:px-0">
    <div class="flex flex-wrap pt-4">
      <Aside tags={tags} />
      <div class="w-full lg:w-3/4 lg:pl-8 xl:pl-12">
        <section>
          <h2
            class="font-header mb-5 bg-gradient-to-r from-pink-600 to-blue-600 bg-clip-text text-4xl font-bold text-transparent"
          >
            Tag â†’ {`#${tag}`}
          </h2>
          {
            page.data.map(({ slug, data: { title, pubDate } }) => {
              return (
                <article>
                  <header class="flex gap-6 pb-1">
                    <time class="font-text w-20 text-xs" datetime={pubDate.toDateString()}>
                      /{getFormattedDate({ date: pubDate })}
                    </time>
                    <h2 class="font-header w-56 text-sm font-bold text-slate-900 md:w-full">
                      <a href={`/${slug}`}>{title}</a>
                    </h2>
                  </header>
                </article>
              )
            })
          }
        </section>
        <Pagination page={page} url={`/tags/${tag}/`} />
      </div>
    </div>
  </div>
</BlogLayout>
